<?php


namespace skyliker;

use CURLFile;

use vendor\config;
use lib\VKFunctions;


/**
 * –ö–ª–∞—Å—Å –ø–æ –æ—Ç–ø—Ä–∞–≤–∫–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –≤ –∑–∞–ø–∏—Å—å
 *
 * Class sendToVK
 *
 */
class sendToVK{


	public static function run(): void{
		$photo = new CURLFile(realpath(__DIR__ . "/" . WorkPhoto::DIR_SAVE . WorkPhoto::NAME_PHOTO_LYCOMER));

		$upload = self::uploadFileServer();
		if(isset($upload['response'])) {
			$upload = $upload['response'];

			$load = self::loadFileServer($upload["upload_url"], ['photo' => $photo]);
			$save = self::saveFileServer($load);

			if(isset($save["response"])) {
				$save = $save["response"];
				$id = self::createWall($save[0])["response"]["post_id"];
				echo date("[H:i:s]", time()) . " –ó–∞–ø–∏—Å—å —Å id " . $id . " —É—Å–ø–µ—à–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–∞ –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–µ group_id –∫–æ—Ç–æ—Ä–æ–π = " . config::GROUP_ID . "!" . PHP_EOL;
			} else {
				echo date("[H:i:s]", time()) . " –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ –º–µ—Ç–æ–¥–∞ pphotos.saveWallPhoto!" . PHP_EOL;
				var_dump($save);
			}
		} else {
			echo date("[H:i:s]", time()) . " –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ –º–µ—Ç–æ–¥–∞ photos.getWallUploadServer!" . PHP_EOL;
			var_dump($upload);
		}
	}

	/**
	 * –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–¥—Ä–µ—Å–∞ —Å–µ—Ä–≤–µ—Ä–∞, –∫—É–¥–∞ –∑–∞–ª–∏–≤–∞—Ç—å –∫–∞—Ä—Ç–∏–Ω–∫—É
	 *
	 * @return array
	 */
	private static function uploadFileServer(): array{
		$data = [
			"v"            => config::VERSION_VKAPI,
			"group_id"     => config::GROUP_ID,
			"access_token" => config::getUserToken()
		];

		$url = Config::curl_get_contents(Config::BASE_VK_REQUEST . "photos.getWallUploadServer?" . http_build_query($data));

		return json_decode($url, true);
	}

	/**
	 * –ó–∞–ª–∏–≤–∞–µ—Ç —Ñ–∞–π–ª –Ω–∞ —Å–µ—Ä–≤–µ—Ä
	 *
	 * @param string $url
	 * @param array $args
	 *
	 * @return array
	 */
	private static function loadFileServer(string $url, array $args): array{
		$url = config::curl_get_contents($url, true, $args);

		return json_decode($url, true);
	}

	/**
	 * –ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –Ω–∞ —Å—Ç–µ–Ω—É
	 *
	 * @param array $args
	 *
	 * @return array
	 */
	private static function saveFileServer(array $args): array{
		$args = array_merge($args, [
			"v"            => config::VERSION_VKAPI,
			"group_id"     => config::GROUP_ID,
			"access_token" => config::getUserToken()
		]);

		$url = Config::curl_get_contents(Config::BASE_VK_REQUEST . "photos.saveWallPhoto?" . http_build_query($args));
		return json_decode($url, true);
	}

	private static function createWall(array $args): array{
		return VKFunctions::sendPost(self::returnTextWall(), "photo" . $args["owner_id"] . "_" . $args["id"], "-" . config::GROUP_ID, 1, config::getUserToken());
	}

	/**
	 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç –¥–ª—è –ø–æ—Å—Ç–∞
	 *
	 * @return string
	 */
	private static function returnTextWall(): string{
		$result = "¬ª –í–∞—à–µ–º—É –≤–Ω–∏–º–∞–Ω–∏—é –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—Ç—Å—è –µ–∂–µ–º–µ—Å—è—á–Ω—ã–µ –∏—Ç–æ–≥–∏ –ª–∞–π–∫–æ–º–µ—Ä–∞. –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –∞–≤—Ç–æ-–∫–æ–Ω–∫—É—Ä—Å–∞!

–ü–æ–±–µ–¥–∏—Ç–µ–ª—è–º–∏ —Å—Ç–∞–Ω–æ–≤—è—Ç—Å—è -

ü•â @id".($id = self::getElementbyIndex(2)[0])." (".self::getNamebyName($id).");
ü•à @id".($id = self::getElementbyIndex(1)[0])." (".self::getNamebyName($id).");
ü•á @id".($id = self::getElementbyIndex(0)[0])." (".self::getNamebyName($id).").

–°—á–∞—Å—Ç–ª–∏–≤—á–∏–∫–∏ –∑–∞–±–∏—Ä–∞—é—Ç –ø—Ä–∏–∑ ‚Äî –ø—Ä–∏–≤–∏–ª–µ–≥–∏—é –Ω–∞ 1 –≤—ã—à–µ, —á–µ–º —É –Ω–∏—Ö –∏–º–µ–µ—Ç—Å—è. –í—ã–∏–≥—Ä–∞–≤—à–∏—Ö –ø–æ–ø—Ä–æ—Å–∏–º —É–∫–∞–∑–∞—Ç—å —Å–≤–æ–∏ –Ω–∏–∫–Ω–µ–π–º—ã –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏–ª–∏ —Å–æ–æ–±—â–∏—Ç—å –æ –ø–æ–ª—É—á–µ–Ω–∏–∏ –Ω–∞–≥—Ä–∞–¥—ã –≤ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–æ–Ω–Ω—ã–π –æ—Ç–¥–µ–ª - @greenium.

–ê –¥–ª—è –Ω–æ–≤–∏—á–∫–æ–≤, –æ–±—ä—è—Å–Ω—è–µ–º —É—Å–ª–æ–≤–∏—è —ç—Ç–æ–≥–æ —Å–∞–º–æ–≥–æ \"–õ–∞–π–∫–æ–º–µ—Ä–∞\":
- –ö–∞–∂–¥—ã–π –º–µ—Å—è—Ü, –≤ 20:00 –ø–æ –ú–°–ö –ø–æ–¥–≤–æ–¥–∏—Ç—Å—è –ø–æ–¥—Å—á–µ—Ç –ª–∞–π–∫–Ω—É—Ç—ã—Ö –≤–∞–º–∏ –∑–∞–ø–∏—Å–µ–π. –¢–µ, —É –∫–æ–≥–æ –ª–∞–π–∫–æ–≤ –æ–∫–∞–∂–µ—Ç—Å—è –±–æ–ª—å—à–µ, –∞ –∏–º–µ–Ω–Ω–æ –¢–û–ü - 3, –ø–æ–ª—É—á–∞—é—Ç –≤–æ–∑–Ω–∞–≥—Ä–∞–∂–¥–µ–Ω–∏–µ: +1 –∫ –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏ –Ω–∞ –ª—é–±–æ–º –∏–∑ –º–∏–Ω–∏-—Ä–µ–∂–∏–º–æ–≤ –Ω–∞—à–µ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞.

–û—Å–æ–±—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è –∫ —É—á–∞—Å—Ç–≤—É—é—â–µ–º—É:

- –∑–∞–ø—Ä–µ—â–∞–µ—Ç—Å—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—ã –∞–≤—Ç–æ-–ª–∞–π–∫–æ–≤. –ü—Ä–∏ –Ω–µ—Å–æ–±–ª—é–¥–µ–Ω–∏–∏ –¥–∞–Ω–Ω–æ–≥–æ –ø—Ä–∏–Ω—Ü–∏–ø–∞, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∏—Å–∫–ª—é—á–∞–µ—Ç—Å—è —Å –∫–æ–Ω–∫—É—Ä—Å–∞ –∏ –º—ã –Ω–µ –±—É–¥–µ–º –ø–æ–¥—Å—á–∏—Ç—ã–≤–∞—Ç—å –µ–≥–æ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å;
- –∑–∞–ø—Ä–µ—â–µ–Ω–æ –ª–∞–π–∫–∞—Ç—å –∑–∞–ø–∏—Å–∏, –Ω–∞—Ä—É—à–∞—é—â–∏–µ –ø—Ä–∞–≤–∏–ª–∞ –≥—Ä—É–ø–ø—ã, —Å–µ—Ä–≤–µ—Ä–∞ (–æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏, —Å–ø–∞–º, —Ñ–ª—É–¥, –ø—Ä–æ–≤–æ–∫–∞—Ü–∏–∏, –ø–æ—Å—Ç—ã —Å –∂–∞–ª–æ–±–∞–º–∏, –ø–∏–∞—Ä–æ–º, –¥–µ–∑–∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π, –Ω–µ—Ü–µ–Ω–∑—É—Ä–Ω–æ–π –ª–µ–∫—Å–∏–∫–æ–π, –ø—Ä–æ–¥–∞–∂–µ–π –∞–∫–∫–∞—É–Ω—Ç–æ–≤, –ø—Ä–æ–¥–∞–∂–µ–π –∏–≥—Ä–æ–≤–æ–≥–æ –±–∞–ª–∞–Ω—Å–∞ –∏ –ø–æ–¥–æ–±–Ω–æ–≥–æ). –ó–∞ –∫–∞–∂–¥—ã–π –ª–∞–π–∫ –ø–æ—Ö–æ–∂–µ–≥–æ –ø–æ—Å—Ç–∞, –ø—Ä–∏ –µ–≥–æ —É–¥–∞–ª–µ–Ω–∏–∏, —Å–∏—Å—Ç–µ–º–∞ –∑–∞–ø–æ–º–∏–Ω–∞–µ—Ç —Ç–µ—Ö, –∫—Ç–æ –Ω–∞—Ä—É—à–∏–ª —ç—Ç–æ –ø—Ä–∞–≤–∏–ª–æ –∏ —É—á–∞—Å—Ç–Ω–∏–∫, –≤ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ, –ø–æ–ª—É—á–∞–µ—Ç -5 –±–∞–ª–ª–æ–≤ –∫ —Å—É–º–º–µ –ª–∞–π–∫–æ–≤ –∑–∞ –∫–∞–∂–¥–æ–µ –Ω–∞—Ä—É—à–µ–Ω–∏–µ;
- –ø—Ä–æ—è–≤–ª—è—Ç—å –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤ –≥—Ä—É–ø–ø–µ, –æ—Å—Ç–∞–≤–ª—è—è –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏ —Å–æ–æ–±—â–µ–Ω–∏—è –Ω–∞ —Å—Ç–µ–Ω–µ —Å–æ–æ–±—â–µ—Å—Ç–≤–∞;
- –Ω–µ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –Ω–∞–∫–∞–∑–∞–Ω–∏–µ –≤ –≤–∏–¥–µ –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ –∞–∫–∫–∞—É–Ω—Ç–∞ –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è –ø–æ–¥—Å—á–µ—Ç–∞.";
		return $result;
	}

	/**
	 * @param int $index
	 *
	 * @return null|array [key, value]
	 */
	private static function getElementbyIndex(int $index): ?array{
		$i = 0;
		foreach(WorkPhoto::$userLikes as $id => $likes) {
			if($index === $i) {
				return [$id, $likes];
			}
			$i++;
		}
		return null;
	}

	/**
	 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–º—è –ø–æ id, –µ—Å–ª–∏ –µ—Å—Ç—å –≤ –º–∞—Å—Å–∏–≤–µ
	 *
	 * @param int $id
	 *
	 * @return string|null
	 */
	private static function getNamebyName(int $id): ?string{
		return WorkPhoto::$userInfo[$id]["name"] ?? null;
	}

}